# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Title(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, english: str=None, native: str=None, romaji: str=None, user_preferred: str=None):  # noqa: E501
        """Title - a model defined in Swagger

        :param english: The english of this Title.  # noqa: E501
        :type english: str
        :param native: The native of this Title.  # noqa: E501
        :type native: str
        :param romaji: The romaji of this Title.  # noqa: E501
        :type romaji: str
        :param user_preferred: The user_preferred of this Title.  # noqa: E501
        :type user_preferred: str
        """
        self.swagger_types = {
            'english': str,
            'native': str,
            'romaji': str,
            'user_preferred': str
        }

        self.attribute_map = {
            'english': 'english',
            'native': 'native',
            'romaji': 'romaji',
            'user_preferred': 'userPreferred'
        }
        self._english = english
        self._native = native
        self._romaji = romaji
        self._user_preferred = user_preferred

    @classmethod
    def from_dict(cls, dikt) -> 'Title':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Title of this Title.  # noqa: E501
        :rtype: Title
        """
        return util.deserialize_model(dikt, cls)

    @property
    def english(self) -> str:
        """Gets the english of this Title.


        :return: The english of this Title.
        :rtype: str
        """
        return self._english

    @english.setter
    def english(self, english: str):
        """Sets the english of this Title.


        :param english: The english of this Title.
        :type english: str
        """

        self._english = english

    @property
    def native(self) -> str:
        """Gets the native of this Title.


        :return: The native of this Title.
        :rtype: str
        """
        return self._native

    @native.setter
    def native(self, native: str):
        """Sets the native of this Title.


        :param native: The native of this Title.
        :type native: str
        """

        self._native = native

    @property
    def romaji(self) -> str:
        """Gets the romaji of this Title.


        :return: The romaji of this Title.
        :rtype: str
        """
        return self._romaji

    @romaji.setter
    def romaji(self, romaji: str):
        """Sets the romaji of this Title.


        :param romaji: The romaji of this Title.
        :type romaji: str
        """

        self._romaji = romaji

    @property
    def user_preferred(self) -> str:
        """Gets the user_preferred of this Title.


        :return: The user_preferred of this Title.
        :rtype: str
        """
        return self._user_preferred

    @user_preferred.setter
    def user_preferred(self, user_preferred: str):
        """Sets the user_preferred of this Title.


        :param user_preferred: The user_preferred of this Title.
        :type user_preferred: str
        """

        self._user_preferred = user_preferred
